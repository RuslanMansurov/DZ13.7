#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//{{ МансуровРЕ: Добавление реквизита формы "КонтактноеЛицо"
	ПолеВвода = Элементы.Вставить("ЭлементКонтактноеЛицо", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.МРЕ_КонтактноеЛицо";
	//}} МансуровРЕ: Добавление реквизита формы "КонтактноеЛицо"
	
	//{{ МансуровРЕ: Добавление реквизит формы "СогласованнаяСкидка" и Команду пересчитать ТЧ
	ПолеВвода = Элементы.Добавить("ЭлементСогласованнаяСкидка", Тип("ПолеФормы"), Элементы.ГруппаШапкаЛево);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.МРЕ_СогласованнаяСкидка";
	ПолеВвода.УстановитьДействие("ПриИзменении", "СогласованнаяСкидкаПриИзменении");
	
	Команда = Команды.Добавить("ПересчитатьТабличнуюЧасть");
	Команда.Заголовок = "Пересчитать с учетом скидки";
	Команда.Действие = "ПересчитатьТабличнуюЧасть";
	
	КнопкаФормы = Элементы.Добавить("КнопкаПересчитатьТабличнуюЧасть", Тип("КнопкаФормы"), Элементы.ГруппаШапкаЛево);
	КнопкаФормы.ИмяКоманды = "ПересчитатьТабличнуюЧасть";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	//}} МансуровРЕ
	
КонецПроцедуры

//{{ МансуровРЕ: Добавление реквизит формы "СогласованнаяСкидка" и Команду пересчитать ТЧ 
&НаКлиенте
Процедура ПересчитатьТабличнуюЧасть(Команда)
	Если Объект.Товары.Количество() = 0 И Объект.Услуги.Количество() = 0 Тогда
		Сообщить("Табличная часть товары и услуги пустая. Пересчитывать нечего.");
	Иначе 
		ПересчетТабличнойЧасти() 
	КонецЕсли;
КонецПроцедуры   

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	РасчитаннаяСумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество; 
	СуммаСУчетомСкидки = РасчитаннаяСумма - (РасчитаннаяСумма * Объект.МРЕ_СогласованнаяСкидка / 100);
	ТекущиеДанные.Сумма = СуммаСУчетомСкидки;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура СогласованнаяСкидкаПриИзменении(Элемент)
	
	Если Объект.Товары.Количество() = 0 И Объект.Услуги.Количество() = 0 Тогда
		Сообщить("Табличная часть товары и услуги пустая. Пересчитывать нечего.");
	Иначе 
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Изменена скидка. Пересчитать табличную часть товаров и услуг?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда 
		ПересчетТабличнойЧасти()
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПересчетТабличнойЧасти()
	
	Для Каждого Товар Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Товар);
	КонецЦикла;
	
	Для Каждого Услуга Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Услуга);
	КонецЦикла;
	
КонецПроцедуры  
//}} МансуровРЕ


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;

	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////{{ МансуровРЕ создана другая процедура с учетом Скидки при пересчете ТЧ
//&НаКлиенте
//Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
//
//	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
//	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
//
//КонецПроцедуры
////}} Мансуров РЕ

&НаКлиенте
Процедура РассчитатьСуммуДокумента()

	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");

КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти